name: Tests and Linting

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  linting:
    name: lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: "^1.18"

      - name: Check file formatting
        run: make fmt/check

      - name: Check go mod tidy
        run: make tidy/check

      - name: Run linting check
        run: make lint

  unit_tests:
    name: unit tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: "^1.18"

      - name: Run unit tests
        run: make test/unit

  integration_tests:
    name: integration tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3

      # Cache Docker layers to speed up building the installer via our
      # cifuzz-builder Dockerfile
      - name: Restore Docker cache
        if: contains(matrix.os, 'ubuntu')
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Setup VM for cifuzz
        uses: ./.github/actions/vm_setup
        with:
          os: ${{ matrix.os }}

      - name: Run integration tests
        if: contains(matrix.os, 'ubuntu')
        # We run the integration tests sequentially here to avoid that
        # tests write to stderr at the same time, which makes it hard to
        # figure out which output belongs to which test.
        run: make test/integration/sequential/docker
        shell: bash

      - name: Run integration tests
        if: contains(matrix.os, 'mac')
        # We run the integration tests sequentially here to avoid that
        # tests write to stderr at the same time, which makes it hard to
        # figure out which output belongs to which test.
        run: make test/integration/sequential
        shell: bash

      - name: Run integration tests
        if: contains(matrix.os, 'windows')
        # We allow a maximum of 2 attempts in order to give flaky tests a
        # better chance to pass.
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 15
          max_attempts: 2
          # We run the integration tests sequentially here to avoid that
          # tests write to stderr at the same time, which makes it hard to
          # figure out which output belongs to which test.
          command: make test/integration/sequential
          shell: bash
